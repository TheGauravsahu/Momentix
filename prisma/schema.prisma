generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Profile {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  username  String     @unique
  email     String     @unique
  bio       String?
  avatar    String?
  subtitle  String?
  posts     Post[]
  likes     Like[]
  comments  Comment[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  bookmarks Bookmark[]

  followers Follow[] @relation("following")
  following  Follow[] @relation("follower")
}

model Follow {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  followerId  String   @db.ObjectId // The user who is following
  followingId String   @db.ObjectId // The user being followed
  createdAt   DateTime @default(now())

  follower  Profile @relation("follower", fields: [followerId], references: [id])
  following Profile @relation("following", fields: [followingId], references: [id])

  @@unique([followerId, followingId])
}

model Post {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  caption   String
  imageUrl  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  likes     Like[]
  comments  Comment[]
  profileId String?   @db.ObjectId

  profile  Profile?   @relation(fields: [profileId], references: [id])
  bookmark Bookmark[]
}

model Like {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  profileId String @db.ObjectId
  postId    String @db.ObjectId

  post    Post    @relation(fields: [postId], references: [id])
  profile Profile @relation(fields: [profileId], references: [id])

  @@unique([profileId, postId])
}

model Comment {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  profileId String @db.ObjectId
  postId    String @db.ObjectId
  text      String

  post    Post    @relation(fields: [postId], references: [id])
  profile Profile @relation(fields: [profileId], references: [id])
}

model Bookmark {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  profileId String @db.ObjectId
  postId    String @db.ObjectId

  profile Profile @relation(fields: [profileId], references: [id])
  post    Post    @relation(fields: [postId], references: [id])

  @@unique([profileId, postId])
}
